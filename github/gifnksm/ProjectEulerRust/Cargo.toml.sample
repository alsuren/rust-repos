[workspace]

[package]
authors = ["gifnksm <makoto.nksm+github@gmail.com>"]
description = "Solving Project Euler with Rust lang."
keywords = ["algebra", "algorithms", "computation", "mathematics", "numerics"]
license = "MIT"
name = "ProjectEulerRust"
readme = "README.md"
repository = "https://github.com/gifnksm/ProjectEulerRust"
version = "0.0.1"

[lib]
name = "common"
path = "src/common.rs"
crate-type = ["dylib"]

[dependencies]
enum_primitive = "0.1"
failure = "0.1"
failure_derive = "0.1"
generic-matrix = "0.1"
getopts = "0.2"
glob = "0.2"
itertools = "0.7"
num-bigint = {version = "0.2", default-features = false}
num-integer = "0.1"
num-iter = "0.1"
num-rational = {version = "0.2", default-features = false}
num-traits = "0.2"
polynomial = "0.0"
reqwest = "0.8"
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
term = "0.5"
time = "0.1"
topological-sort = "0.1"
union-find = "0.3"

[dependencies.cont_frac]
path = "./pkg/cont_frac"

[dependencies.integer]
path = "./pkg/integer"
features = ["bigint"]

[dependencies.iter]
path = "./pkg/iter"

[dependencies.playing_card]
path = "./pkg/playing_card"

[dependencies.prime]
path = "./pkg/prime"

[dependencies.seq]
path = "./pkg/seq"

[dev-dependencies]
rand = "0.5"

