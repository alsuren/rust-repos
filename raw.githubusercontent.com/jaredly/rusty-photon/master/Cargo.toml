[package]
name = "zenphoton"
version = "0.1.0"
authors = ["Jared Forsyth <jared@jaredforsyth.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2"
num-traits = "0"
nalgebra = "*"
ncollide2d = "*"
lazy_static = "1.3.0"

shared = { path="./shared" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

base64 = "*"
bincode = "*"
serde_json = "1.0"
serde = "*"
miniz_oxide = "*"

colorsys = "*"

rand = { version = "*", features = ["stdweb"] }
# log = "0.4"
# web_logger = "0.1"
# yew = "0.5.0"
# sauron = "*"
# stdweb = "0.4.9"

[dependencies.js-sys]
version = "*"
features = [

]

[dependencies.web-sys]
version = "0.3.4"
features = [
  'ImageData',
  'Performance',
  'ImageBitmap',
  'EventTarget',
  'MouseEvent',
  'KeyboardEvent',
  'InputEvent',
  'Event',
  'DomRect',
  'console',
  'CanvasRenderingContext2d',
  'HtmlElement',
  'CssStyleDeclaration',
  'HtmlButtonElement',
  'HtmlCanvasElement',
  'HtmlInputElement',
  'HtmlTextAreaElement',
  'DedicatedWorkerGlobalScope',
  'MessageEvent',
  'Window',
  'Document',
  'Element',
  'Worker'
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
